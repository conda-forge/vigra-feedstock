From 05cb325e3e2430621da7244e19d33bfb1246dd8d Mon Sep 17 00:00:00 2001
From: Ullrich Koethe <ullrich.koethe@iwr.uni-heidelberg.de>
Date: Tue, 16 Oct 2018 19:42:39 +0200
Subject: [PATCH] vigranumpy: removed obsolete h5py.highlevel

---
 vigranumpy/lib/__init__.py | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

diff --git a/vigranumpy/lib/__init__.py b/vigranumpy/lib/__init__.py
index e9cff1d6..072a797c 100644
--- a/vigranumpy/lib/__init__.py
+++ b/vigranumpy/lib/__init__.py
@@ -200,7 +200,7 @@ def readHDF5(filenameOrGroup, pathInFile, order=None):
        Requirements: the 'h5py' module must be installed.
     '''
     import h5py
-    if isinstance(filenameOrGroup, h5py.highlevel.Group):
+    if isinstance(filenameOrGroup, h5py.Group):
         file = None
         group = filenameOrGroup
     else:
@@ -208,7 +208,7 @@ def readHDF5(filenameOrGroup, pathInFile, order=None):
         group = file['/']
     try:
         dataset = group[pathInFile]
-        if not isinstance(dataset, h5py.highlevel.Dataset):
+        if not isinstance(dataset, h5py.Dataset):
             raise IOError("readHDF5(): '%s' is not a dataset" % pathInFile)
         data = dataset.value
         axistags = dataset.attrs.get('axistags', None)
@@ -258,7 +258,7 @@ def writeHDF5(data, filenameOrGroup, pathInFile, compression=None, chunks=None):
        Requirements: the 'h5py' module must be installed.
     '''
     import h5py
-    if isinstance(filenameOrGroup, h5py.highlevel.Group):
+    if isinstance(filenameOrGroup, h5py.Group):
         file = None
         group = filenameOrGroup
     else:
@@ -272,13 +272,13 @@ def writeHDF5(data, filenameOrGroup, pathInFile, compression=None, chunks=None):
             g = group.get(groupname, default=None)
             if g is None:
                 group = group.create_group(groupname)
-            elif not isinstance(g, h5py.highlevel.Group):
+            elif not isinstance(g, h5py.Group):
                 raise IOError("writeHDF5(): invalid path '%s'" % pathInFile)
             else:
                 group = g
         dataset = group.get(levels[-1], default=None)
         if dataset is not None:
-            if isinstance(dataset, h5py.highlevel.Dataset):
+            if isinstance(dataset, h5py.Dataset):
                 del group[levels[-1]]
             else:
                 raise IOError("writeHDF5(): cannot replace '%s' because it is not a dataset" % pathInFile)
-- 
2.33.0

